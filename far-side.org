# -*- coding: utf-8 -*-
#+STARTUP: showall inlineimages
#+TITLE: Far Side
#+AUTHOR: Роман Зайруллин
#+EMAIL: krosenmann@gmail.com
#+descriptions: CRPG on python
#+language: ru
#+options: TeX:t LaTeX:t
#+TAGS: Technical Design
#+TODO: TODO(t) IN_PROGRESS(p) | FEEDBACK(f) DONE(d)
* License
  Оригинал
  [[./LICENSE]]
  
* CRPG. Введение
  Этот документ содержит все. И предусматривает все.
  Вдохновленный Shadowrun, Fallout, ADOM и различными TDS, я хочу поместить
  вас в мир, в котором нет магии, зато есть пар и электричество. И,
  может быть, немного клюквы. Ну и нефть еще. И вообще много всяких
  интересных штук.

** Лист вдохновения						     :Design:
   1. Интересные и хардкорные приключения, созданные ранее, и
      интересные истории.
      1) Последнее приключения Тандема Спуни    [[https://www.youtube.com/watch?v=D8XsooIgNMQ&index=8&list=PL7UGawndkywQi-Or6ChMgfltmmr2hh2oN]]
      2) DungeonLand
      3) 
** Замечания об управлении					  :Technical:
   Все действия, которые буду производиться в игре не привязаны
   напрямую к клавишам. Более того, там вообще должно отсутствовать
   понятие клавиш. Все действия выполняются с помощью команд, в то
   время как в интерфейсе есть кнопки для, соот., запуска этих команд,
   а так же прописаны некие клавиатурные привязки для их исполнения. 

** Внутренний язык игры.					  :Technical:
     Конечно же csv для табличных данных, конфиг формат для конфигов
   (ибо из коробки все поддерживется, стандартная библиотека
   ванлав). Так же создается внутренний командный язык, для описания
   игрового процесса.   
** Инструменты и начальный набор функций.			  :Technical:
   Для игры используются стандартные d10, d4, d6, d12, d20 дайсы.
   Все настройки хранятся в файле "game.conf", а сами объекты должны
   создаваться из файлов с описаниями этих самых объектов. Это позволит
   без больших проблем расширять игру, наполнять ее контентом, и, при
   необходимости, перенести на какой-нибудь другой
   язык\платформу. Достаточно будет просто переписать транслятор. 
   Дуаю, лучше использовать csv и юниксовый конфиг-формат. Они уже
   написаны. Хотя, все равно придется что-то выдумать.

** Дисплей и настройки						  :Technical:
   По умолчанию дисплей имеет разрешение 640х480, это значение
   захардкожено, как способное сработать наверняка.
   #+begin_src python :tangle display.py
     import pygame
     import configurations
     #from pygame.locals import *
     #from OpenGL.GL import *
     #from OpenGL.GLU import *
     #import surface

     class Display:
         def __init__(self):
             pygame.init()
             pygame.display.set_caption("Far Prototype")
             self.set_display(resolution)
   #+end_src
   Конфигурирование:
   #+begin_src conf :tuple gameconfig.cfg
     [display]
             resolution = (640, 480)
             color = 32
             fullscreen = False
     [game]
             language = english
   #+end_src

** Искусственный интеллект				   :Design:Technical:
   По сути, весь игровой процесс, это игра против одного ИИ. Некоторого
   ИИ, под названием "Мастер". Он отвечает за строение карты, поведение
   НПС, систему квестов, и взаимоотношения в мире. Единственное, что
   будет едино от партии к партии, это мясорубка в кульминации.
   Компания в РПГ это не одно приключени, но целая группа оных,
   связаных персонажами, местами действия и прочим. И последнее
   приключение, в которое пустятся персонажи (сиречь, модуль) ---
   эдакая аналогия классического модуля для ДнД "Страна чудес" (одного
   из самых (если не самый) сложных модулей для игры, и самая жуткая и
   кровавая мясорубка из виденых мной, для полноты картины рекомендую к
   просмотру ролик из пункта 1.1 Листа вдохновения. Это история о последнем приключении Тандема
   Спуни, которое как раз произошло в Стране чудес.


* Ролевая система						     :Design:
** Характеристики
  Проблема выбора ролевой системы в наличии магии у большинства
  РПГ. Я, конечно, поклонник фентези, но в своем проекте использовать
  ее не хочу. На самом деле, это ж уже достаточно приевшаяся тема и
  кто только не делает РПГ с магией и красотками. Я же хочу окунуться
  в мир альтернативной истории в компании с Говардом Радостью-моим
  Лавкрафтом.
  Итак. Характеристики. (d10 при создании, с
  возможностью корректировки)
  - Сила    
  - Ловкость  
  - Интеллект
  - Восприятие
  - Здоровье[fn:2]
  - Харизма[fn:1]
  - Удача
  - Воля

** Перки
  Так же, каждый персонаж должен иметь инвентарь (чтоб безумным манчам
  было откуда собирать лут).
  Помимо основных характеристик, персонажи так же имеют различные навыки
  различные навыки:
  - Оружие, боевые навыки
    * Холодное
    * Огнестрельное
    * Рукопашный бой
  - Техника
    * Взлом
    * Ремонт
  - Исследования
  - Люди
    * Кража
    * Ложь
    * Убеждение
    * Хитрость
  - Медицина
    * Хирургия
    * Первая помощь
  Так же, естественно, каждый персонаж имеет имя, пол, вид (человек,
  собака, дерево), уровень (номинальное количество ХР) и описание. 
** Создание персонажа
   Персонаж создается броском d10
#+begin_src python :tangle player.py
  # -*- coding: utf-8 -*-
  from game-classes import *
  from functions import *

  player = Сharacter(name, playerStat, playerPerks) 
#+end_src
** Аффекты
   
* Сценарии
  Использование концепции изменчивого текста для написания сценария
  
* Таблицы							     :Design:

** НПС
** Бестиарий
** Предметы
*** Оружие
*** Одежда
*** Инструменты
*** Расходуемые
*** Хлам
    
* Локации							     :Design:
  Важной частью повествования является карта. Для более эффективного
  построения локаций разобьем карту на участки, от которых и будем
  отталкиваться. Пример: имеется некоторый участок под названием
  "город". Тип участка задает колличество домов, площадь, и плотность
  построения этих самых домов. Которая будет немного варьироваться от
  города к городу. Если это город. То как минимум он будет иметь:
  - Церковь
  - Большую школу
  - Общепит
  - Суд
  - Полицейский участок
  - Больницу
  Большой город имеет на границе помимо вышеперечисленного:
  - Тюрьму на границе города
  - Колледж\Университет
  - Промышленное строение. (Завод, фабрика, иже)
  Я не вижу смысла делать больше трех крупных городов. Каждый из которых
  будет своеобразным центром.
  От крупных поселений более мелкие располагаются радиально, в
  соотвествии с местностью и более мелкие зависят от ближайшего по
  величине. Т.е. Карта опирается на укроподобный граф. Вот
  так. Опирается, но не следует ему бесприкословно.
  Так как мастер каждую новую игру начинает с нуля, соответственно,
  названия местностей меняются каждое прохождение, хотя, вероятность
  совпрадения, определенно, присутствует.
  Город начинается с определения его значимости  (в инфраструктуре, но
  не сюжете), отсюда вытекает его размер, предприятия и, как
  следствие, набор и количество квестов. 
  Построением карты и расстановкой опорных точек занимается ИИ
  Мастера, на основе закрепленных за ним принципов


  
* Звук								  :Technical:
** libpd и прочее
   Конечно, процедурный синтез, во многом, это все затевается ради
   него. Помимо, конечно, изменяющегося, в зависимости от
   происходящего, саундтрека. Мне хочется полностью обойтись без
   предзаписанного звука. Это позволит использовать разнообразное
   окружение, гибкое и интересное. И при этом игра не будет много
   весить.
   Реализуется звук в виде библиотек, написанных на FAUST

* TODO								 :TODOExport:

** DONE Дисплей							  :Technical:
   CLOSED: [2016-09-12 Пн 15:46]
    Добавить чтение конфигов
    #+begin_src python configurations.py
      # -*- coding: utf8 -*-
      from ConfigParser import SafeConfigParser

      parser = SafeConfigParser()
      try:
	  parser.read('gameconfig.cfg')
	  resolution = parser.get('display','resolution') #привести типы у разрешения
	  language = parser.get('game', 'language')
      except
	  print TypeError
	  #default settings
	  resolution = (640, 480)
	  language = 'english'
	  
    #+end_src
** IN_PROGRESS Утилиты						  :Technical:
   - [ ] Загрузчик моделей
   - [ ] Загрузчик текстур
   - [ ] Конфиг ридер
** TODO Реализация(прототип) "Мастера"				  :Technical:
   Мастера должен быть тестируем отдельно от всего на свете. Логичен,
   но с сюрпризами. Материалы по работе и логике мастера я буду
   размещать здесь же. (возможны дубли)
   Заняться этим после интерпретатора команд

** IN_PROGRESS Интерпретатор команд				  :Technical:
   Как говорилось в пункте про управление, все в игре происходит
   посредством команд, клавиатура, иконки, геймпад -- всего лишь
   интерфейс для них. Поехали!
** TODO Разработать (утащить) формулы для учета экспы и уровней.
#+begin_src python :tangle game-classes.py
  # -*- coding: utf-8 -*-

  class Character:
    """Basic class for creating PC and NPC"""
    def __init__(self):
      """initialisation of character"""
      self.stats = {}
      self.perks = {}
      self.inventory = {} #maybe, i'm not sure
      self.description = ''
    def creation(self):
      """function for generating character"""
      for stat in self.stats.keys():
        self.stats[stat] = d10()
    def death(self):
      """death"""
       itemsDrop(self.inventory)
       self.description+=log
#+end_src

* Footnotes

[fn:1] 
Если, конечно, я не придумаю чего иного

[fn:2] Аналогично характеристике "Телосложение" в ДНД-лайк системахз

